// <auto-generated />
using System;
using Decisison.Maker.API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Decisison.Maker.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.Con", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DecisionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId");

                    b.ToTable("Cons");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.Decision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.Pro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DecisionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId");

                    b.ToTable("Pros");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.UserSelection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DecisionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId");

                    b.ToTable("UserSelections");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.Con", b =>
                {
                    b.HasOne("Decisison.Maker.API.Data.Entities.Decision", "Decision")
                        .WithMany("Cons")
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Decision");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.Pro", b =>
                {
                    b.HasOne("Decisison.Maker.API.Data.Entities.Decision", "Decision")
                        .WithMany("Pros")
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Decision");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.UserSelection", b =>
                {
                    b.HasOne("Decisison.Maker.API.Data.Entities.Decision", "Decision")
                        .WithMany()
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Decision");
                });

            modelBuilder.Entity("Decisison.Maker.API.Data.Entities.Decision", b =>
                {
                    b.Navigation("Cons");

                    b.Navigation("Pros");
                });
#pragma warning restore 612, 618
        }
    }
}
